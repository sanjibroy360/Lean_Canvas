{"version":3,"sources":["assets/media/images/img.png","store/index.js","store/action/types.js","views/components/InputBox.jsx","views/components/Preview.jsx","views/components/AddPoints.jsx","store/action/index.js","views/components/SinglePoint.jsx","views/components/BuildMode/DraggableCards.jsx","views/components/AllPoints.jsx","views/components/BuildMode/DroppableTopic.jsx","views/components/SingleTopic.jsx","views/LeanCanvas/CanvasGridUi.jsx","views/LeanCanvas/LeanCanvasBoard.jsx","views/HomePage/Home.jsx","views/App.jsx","index.js"],"names":["module","exports","initialState","projectName","date","topics","enablePresentationMode","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","state","action","type","payload","map","topic","topicId","points","point","pointId","filter","InputBox","props","pointInfo","value","enablePreview","handleSubmit","handlePreview","closeInputBox","handleInput","textareaName","className","name","rows","onChange","trim","checked","onClick","event","Preview","source","escapeHtml","AddPoints","target","style","height","scrollHeight","setState","uuid","preview","dispatch","addPoint","this","Component","connect","SinglePoint","editPoint","enableEditMode","handleEditMode","enablePresentaionMode","handleDelete","deletePoint","DraggableCard","index","key","draggableId","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","AllPoints","DraggableCards","popupStyle","opacity","padding","DroppableTopic","handleInputTaking","isAddingPoints","boxNo","topicName","icons","droppableId","droppableProps","src","alt","Popup","content","position","size","trigger","gridView","collumnNo","Fragment","LeanCanvasBoard","handlePresentationMode","togglePresentationMode","handleRowView","console","log","handleGridView","reorder","list","sourceIndex","destIndex","card","splice","reorderPoints","onDragEnd","response","destination","Checkbox","toggle","class","Home","Button","animated","Content","visible","hidden","Icon","heroImage","App","addTopics","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8fdc9a23.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/img.321d6e1d.png\";","import { createStore, compose } from \"redux\";\n\nimport {\n  ADD_TOPICS,\n  ADD_POINT,\n  EDIT_POINT,\n  REORDER_POINTS,\n  DELETE_POINT,\n  TOGGLE_PRESENTATION_MODE\n} from \"./action/types\";\n\nlet initialState = {\n  projectName: \"\",\n  date: \"\",\n  topics: [],\n  enablePresentationMode: false\n};\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_TOPICS:\n      return { ...state, topics: [...action.payload] };\n\n    case ADD_POINT:\n      state.topics = state.topics.map((topic) => {\n        if (topic.topicId === action.payload.topicId) {\n          return { ...topic, points: [...topic.points, action.payload] };\n        }\n        return topic;\n      });\n      return { ...state };\n\n    case EDIT_POINT:\n      state.topics = state.topics.map((topic) => {\n        if (topic.topicId === action.payload.topicId) {\n          topic.points = topic.points.map((point) => {\n            if (point.pointId === action.payload.pointId) {\n              return action.payload;\n            }\n            return point;\n          });\n        }\n        return topic;\n      });\n      return { ...state };\n\n    case REORDER_POINTS:\n      state.topics = state.topics.map((topic) => {\n        if (topic.topicId === action.payload.topicId) {\n          topic.points = action.payload.points;\n        }\n        return topic;\n      });\n      return { ...state };\n\n    case DELETE_POINT:\n      state.topics = state.topics.map((topic) => {\n        if (topic.topicId === action.payload.topicId) {\n          topic.points = topic.points.filter(\n            (point) => point.pointId !== action.payload.pointId\n          );\n        }\n        return topic;\n      });\n      return { ...state };\n\n    case TOGGLE_PRESENTATION_MODE:\n      if(typeof action.payload == \"boolean\") {\n        state.enablePresentationMode = action.payload;\n      }\n      return {...state};\n\n    default:\n      return state;\n  }\n}\n\nconst composeEnhancers =\n  (typeof window !== \"undefined\" &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nexport const store = createStore(reducer, composeEnhancers());\n","export const ADD_TOPICS = \"ADD_TOPICS\";\nexport const ADD_POINT = \"ADD_POINT\";\nexport const EDIT_POINT = \"EDIT_POINT\";\nexport const REORDER_POINTS = \"REORDER_POINTS\";\nexport const DELETE_POINT = \"DELETE_POINT\";\nexport const TOGGLE_PRESENTATION_MODE = \"TOGGLE_PRESENTATION_MODE\";\n","import React from \"react\";\n\nfunction InputBox(props) {\n  let {\n    pointInfo,\n    value,\n    enablePreview,\n    handleSubmit,\n    handlePreview,\n    closeInputBox,\n    handleInput,\n    textareaName,\n  } = props;\n  return (\n    <div className=\"input_point\">\n      <textarea\n        name={textareaName}\n        value={value}\n        rows=\"3\"\n        onChange={handleInput}\n      ></textarea>\n      {value.trim() && (\n        <>\n          <input\n            type=\"checkbox\"\n            name=\"preview\"\n            checked={enablePreview}\n            onChange={handlePreview}\n          />\n          <span className=\"small_text\">Preview text</span>\n        </>\n      )}\n\n      <div className=\"btn_wrapper\">\n        <button\n          type=\"submit\"\n          onClick={(event) => handleSubmit(event, pointInfo)}\n          className=\"btn save_btn\"\n        >\n          Add\n        </button>\n\n        <button\n          type=\"submit\"\n          onClick={closeInputBox}\n          className=\"btn cancel_btn\"\n        >\n          <i className=\"fas fa-times\"></i>\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default InputBox;\n","import React from 'react';\nimport ReactMarkdown from \"react-markdown\";\n\nfunction Preview({source, enablePreview, handlePreview}) {\n    return (\n        <div>\n           <div className=\"card preview_text\">\n            <ReactMarkdown source={source} escapeHtml={false} />\n            <input\n              type=\"checkbox\"\n              name=\"preview\"\n              checked={enablePreview}\n              onChange={handlePreview}\n            />\n            <span className=\"small_text\">Preview text</span>\n          </div> \n        </div>\n    );\n}\n\nexport default Preview;","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addPoint } from \"../../store/action\";\nimport uuid from \"react-uuid\";\nimport InputBox from \"./InputBox\";\nimport Preview from \"./Preview\";\n\nclass AddPoints extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      point: \"\",\n      preview: false,\n    };\n  }\n\n  handleInput = (event) => {\n    event.target.style.height = \"inherit\";\n    event.target.style.height = `${event.target.scrollHeight}px`;\n    let {\n      target: { name, value },\n    } = event;\n    return this.setState({ [name]: value });\n  };\n\n  handlePreview = ({ target: { name, checked } }) => {\n    return this.setState({ [name]: checked });\n  };\n\n  handleSubmit = (event) => {\n    let { point } = this.state;\n    point = point.trim();\n    let payload = {\n      pointId: uuid(),\n      point,\n      topicId: this.props.topic.topicId,\n    };\n    if (point) {\n      this.setState({ point: \"\", preview: false });\n      this.props.closeInputBox();\n      return addPoint(payload, this.props.dispatch);\n    }\n  };\n\n  closeInputBox = () => {\n    this.setState({ point: \"\", preview: false });\n    return this.props.closeInputBox();\n  };\n  render() {\n    let { point, preview } = this.state;\n    let { topic } = this.props;\n    return (\n      <div className=\"add_points_form\">\n        {preview ? (\n          <Preview\n            source={point}\n            enablePreview={preview}\n            handlePreview={this.handlePreview}\n          />\n        ) : (\n          <InputBox\n            textareaName={\"point\"}\n            value={point}\n            enablePreview={preview}\n            handleInput={this.handleInput}\n            handlePreview={this.handlePreview}\n            closeInputBox={this.closeInputBox}\n            handleSubmit={this.handleSubmit}\n            pointInfo={topic}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect()(AddPoints);\n","import {\n  ADD_TOPICS,\n  ADD_POINT,\n  EDIT_POINT,\n  REORDER_POINTS,\n  DELETE_POINT,\n  TOGGLE_PRESENTATION_MODE\n} from \"./types\";\n\nexport function addTopics(payload, dispatch) {\n  return dispatch({\n    type: ADD_TOPICS,\n    payload,\n  });\n}\n\nexport function addPoint(payload, dispatch) {\n  return dispatch({\n    type: ADD_POINT,\n    payload,\n  });\n}\n\nexport function editPoint(payload, dispatch) {\n  return dispatch({\n    type: EDIT_POINT,\n    payload,\n  });\n}\n\nexport function reorderPoints(payload, dispatch) {\n  return dispatch({\n    type: REORDER_POINTS,\n    payload,\n  });\n}\n\nexport function deletePoint(payload, dispatch) {\n  return dispatch({\n    type: DELETE_POINT,\n    payload,\n  });\n}\n\nexport function togglePresentationMode(payload, dispatch) {\n  return dispatch({\n    type: TOGGLE_PRESENTATION_MODE,\n    payload\n  })\n}","import React, { Component } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport { editPoint, deletePoint } from \"../../store/action\";\nimport { connect } from \"react-redux\";\nimport InputBox from \"./InputBox\";\nimport Preview from \"./Preview\";\n\nclass SinglePoint extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editPoint: \"\",\n      preview: \"\",\n      enableEditMode: false,\n    };\n  }\n  handleInput = (event) => {\n    event.target.style.height = \"inherit\";\n    event.target.style.height = `${event.target.scrollHeight}px`;\n    let {\n      target: { name, value },\n    } = event;\n    return this.setState({ [name]: value });\n  };\n\n  handlePreview = ({ target: { name, checked } }) => {\n    return this.setState({ [name]: checked });\n  };\n\n  handleSubmit = (event, payload) => {\n    payload = { ...payload, point: this.state.editPoint };\n    this.setState({ editPoint: \"\", enableEditMode: false });\n    return editPoint(payload, this.props.dispatch);\n  };\n\n  handleEditMode = (event, payload) => {\n    let { point } = payload;\n    let { enablePresentaionMode } = this.props;\n    // if (enablePresentaionMode && point)\n    this.setState({ editPoint: point, enableEditMode: true });\n  };\n\n  handleDelete = (event, payload) => {\n    return deletePoint(payload, this.props.dispatch);\n  };\n\n  closeInputBox = () => {\n    return this.setState({ editPoint: \"\", enableEditMode: false });\n  };\n\n  render() {\n    let { enableEditMode, editPoint, preview } = this.state;\n    let { pointInfo, enablePresentationMode } = this.props;\n    return (\n      <div>\n        {enableEditMode && !enablePresentationMode ? (\n          <>\n            {preview ? (\n              <Preview\n                source={editPoint}\n                enablePreview={preview}\n                handlePreview={this.handlePreview}\n              />\n            ) : (\n              <>\n                <InputBox\n                  textareaName={\"editPoint\"}\n                  value={editPoint}\n                  enablePreview={preview}\n                  handleInput={this.handleInput}\n                  handlePreview={this.handlePreview}\n                  closeInputBox={this.closeInputBox}\n                  handleSubmit={this.handleSubmit}\n                  pointInfo={pointInfo}\n                />\n              </>\n            )}\n          </>\n        ) : (\n          <div className=\"card\">\n            <div className=\"content\">\n              <div className=\"text\">\n                <ReactMarkdown escapeHtml={false}>\n                  {pointInfo.point}\n                </ReactMarkdown>\n              </div>\n              {!enablePresentationMode && (\n                <nobr>\n                  <div className=\"btns\">\n                    <button\n                      onClick={(event) => this.handleEditMode(event, pointInfo)}\n                    >\n                      Edit\n                    </button>\n\n                    <button\n                      onClick={(event) => this.handleDelete(event, pointInfo)}\n                    >\n                      Delete\n                    </button>\n                  </div>\n                </nobr>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ enablePresentationMode }) {\n  return { enablePresentationMode };\n}\n\nexport default connect(mapStateToProps)(SinglePoint);\n","import React from \"react\";\nimport SinglePoint from \"../SinglePoint\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\nfunction DraggableCard({ point, index }) {\n  return (\n    <Draggable key={point.pointId} draggableId={point.pointId} index={index}>\n      {(provided, snapshot) => (\n        <div\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          <SinglePoint pointInfo={point} />\n        </div>\n      )}\n    </Draggable>\n  );\n}\n\nexport default DraggableCard;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport SinglePoint from \"./SinglePoint\";\nimport DraggableCards from \"./BuildMode/DraggableCards\";\n\nclass AllPoints extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editPoint: \"\",\n      preview: \"\",\n      enableEditMode: false,\n    };\n  }\n\n  render() {\n    let { topic, state } = this.props;\n    let { enablePresentationMode } = state;\n\n    return (\n      <>\n        {topic.points.map((point, index) => {\n          return (\n            <>\n              {enablePresentationMode ? (\n                <>\n                  {\" \"}\n                  <SinglePoint pointInfo={point} />\n                </>\n              ) : (\n                <>\n                  {\" \"}\n                  <DraggableCards point={point} index={index} />\n                </>\n              )}\n            </>\n          );\n        })}\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { state };\n}\n\nexport default connect(mapStateToProps)(AllPoints);\n","import React, { Component } from \"react\";\nimport AddPoints from \"../AddPoints\";\nimport AllPoints from \"../AllPoints\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport { Popup } from \"semantic-ui-react\";\n\nconst popupStyle = {\n  opacity: 0.7,\n  padding: \"0.375rem\",\n};\n\nclass DroppableTopic extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAddingPoints: false,\n    };\n  }\n\n  handleInputTaking = () => {\n    let { isAddingPoints } = this.state;\n    return this.setState({ isAddingPoints: !isAddingPoints });\n  };\n\n  render() {\n    let { topic, boxNo } = this.props;\n    let { topicName, topicId } = topic;\n    let { isAddingPoints } = this.state;\n\n    let icons = [\n      \"https://img.icons8.com/dusk/32/000000/lock-2.png\",\n      \"\",\n      \"https://img.icons8.com/ultraviolet/26/000000/key.png\",\n      \"https://img.icons8.com/officel/22/000000/bar-chart.png\",\n      \"https://img.icons8.com/material-two-tone/30/000000/gift.png\",\n      \"\",\n      \"https://img.icons8.com/dusk/31/000000/fantasy.png\",\n      \"https://img.icons8.com/windows/28/000000/three-way-direction.png\",\n      \"https://img.icons8.com/dusk/34/000000/gender-neutral-user--v1.png\",\n      \"\",\n      \"https://img.icons8.com/pastel-glyph/32/000000/transaction-list--v5.png\",\n      \"https://img.icons8.com/plasticine/55/000000/economic-improvement.png\",\n    ];\n    return (\n      <Droppable droppableId={topic.topicId}>\n        {(provided, snapshot) => (\n          <div\n            {...provided.droppableProps}\n            ref={provided.innerRef}\n            className={`topic box${boxNo}`}\n            key={topicName + topicId}\n          >\n            <div className=\"topic_card_header\">\n              <p className=\"title\" key={topicId + 1}>\n                {topicName}\n              </p>\n              <div>\n                <img src={icons[boxNo - 1]} alt=\"\" />\n              </div>\n            </div>\n\n            {isAddingPoints ? (\n              <AddPoints topic={topic} closeInputBox={this.handleInputTaking} />\n            ) : (\n              <Popup\n                content=\"Add Point\"\n                position=\"right center\"\n                size=\"mini\"\n                style={popupStyle}\n                trigger={\n                  <button\n                    className=\"add_card_btn\"\n                    onClick={this.handleInputTaking}\n                  >\n                    <i className=\"fa fa-plus-circle\"></i>\n                  </button>\n                }\n              />\n            )}\n            <AllPoints topic={topic} />\n          </div>\n        )}\n      </Droppable>\n    );\n  }\n}\n\nexport default DroppableTopic;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport DroppableTopic from \"./BuildMode/DroppableTopic\";\nimport AllPoints from \"./AllPoints\";\n\nfunction SingleTopic(props) {\n  let { topic, boxNo, enablePresentationMode } = props;\n  let { topicName, topicId } = topic;\n  let icons = [\n    \"https://img.icons8.com/dusk/32/000000/lock-2.png\",\n    \"\",\n    \"https://img.icons8.com/ultraviolet/26/000000/key.png\",\n    \"https://img.icons8.com/officel/22/000000/bar-chart.png\",\n    \"https://img.icons8.com/material-two-tone/30/000000/gift.png\",\n    \"\",\n    \"https://img.icons8.com/dusk/31/000000/fantasy.png\",\n    \"https://img.icons8.com/windows/28/000000/three-way-direction.png\",\n    \"https://img.icons8.com/dusk/34/000000/gender-neutral-user--v1.png\",\n    \"\",\n    \"https://img.icons8.com/pastel-glyph/32/000000/transaction-list--v5.png\",\n    \"https://img.icons8.com/plasticine/55/000000/economic-improvement.png\",\n  ];\n  return (\n    <>\n      {enablePresentationMode ? (\n        <div className={`topic box${boxNo}`}>\n          <div className=\"topic_card_header\">\n            <p className=\"title\" key={topicId + 1}>\n              {topicName}\n            </p>\n            <div>\n              <img src={icons[boxNo - 1]} alt=\"\" />\n            </div>\n          </div>\n          <AllPoints topic={topic} />\n        </div>\n      ) : (\n        <DroppableTopic topic={topic} boxNo={boxNo} />\n      )}\n    </>\n  );\n}\n\nfunction mapStateToProps({ enablePresentationMode }) {\n  return { enablePresentationMode };\n}\n\nexport default connect(mapStateToProps)(SingleTopic);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport SingleTopic from \"../components/SingleTopic\";\n\nfunction CanvasGridUi({ topics, gridView }) {\n  return (\n    <ul\n      className={gridView ? \"grid_container\" : \"grid_container row_view\"}\n      key=\"wrapper\"\n    >\n      {topics.map((topic, collumnNo) => {\n        return (\n          <React.Fragment key={topic.topicId + collumnNo}>\n            {!(collumnNo % 2) ? (\n              <li className=\"inner_wrapper\" key={`${collumnNo}`}>\n                <SingleTopic\n                  topic={topics[collumnNo]}\n                  key={`${topic.topicId}card`}\n                  boxNo={collumnNo + 1}\n                />\n                <SingleTopic\n                  topic={topics[collumnNo + 1]}\n                  boxNo={collumnNo + 2}\n                  key={`${topic.topicId + 1}card`}\n                />\n              </li>\n            ) : (\n              <></>\n            )}\n          </React.Fragment>\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction mapStateToProps({ topics }) {\n  return { topics };\n}\n\nexport default connect(mapStateToProps)(CanvasGridUi);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { reorderPoints, togglePresentationMode } from \"../../store/action\";\nimport { Checkbox, Button, Popup } from \"semantic-ui-react\";\nimport CanvasGridUi from \"./CanvasGridUi\";\n\nclass LeanCanvasBoard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      enablePresentationMode: false,\n      gridView: true,\n    };\n  }\n\n  handlePresentationMode = () => {\n    let { enablePresentationMode } = this.state;\n\n    this.setState({ enablePresentationMode: !enablePresentationMode }, () => {\n      return togglePresentationMode(\n        this.state.enablePresentationMode,\n        this.props.dispatch\n      );\n    });\n  };\n\n  handleRowView = () => {\n    console.log(\"Clicked\");\n    return this.setState({ gridView: false });\n  };\n\n  handleGridView = () => {\n    return this.setState({ gridView: true });\n  };\n\n  reorder = (list, sourceIndex, destIndex) => {\n    let card = list.points.splice(sourceIndex, 1)[0];\n    list.points.splice(destIndex, 0, card);\n    return reorderPoints(list, this.props.dispatch);\n  };\n  onDragEnd = (response) => {\n    let { topics } = this.props;\n    let { droppableId } = response.source;\n    let sourceIndex = response.source.index;\n    let destIndex = response.destination.index;\n    let list = topics.filter((topic) => topic.topicId === droppableId)[0];\n    console.log(response);\n    return this.reorder(list, sourceIndex, destIndex);\n  };\n  render() {\n    let { topics } = this.props;\n    let { enablePresentationMode, gridView } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"board_wrapper\">\n\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          <div className=\"canvas_header\">\n            <div className=\"toggle_btn\">\n              <Checkbox\n                toggle\n                checked={enablePresentationMode}\n                onChange={this.handlePresentationMode}\n              />\n              <nobr> Presentation Mode</nobr>\n            </div>\n            <div className=\"view\">\n              <div onClick={this.handleGridView}>\n                <img\n                  src=\"https://img.icons8.com/fluent-systems-regular/30/000000/activity-grid.png\"\n                  alt=\"\"\n                />\n              </div>\n\n              <div onClick={this.handleRowView}>\n                <i class=\"fas fa-bars\"></i>\n              </div>\n            </div>\n          </div>\n\n          <CanvasGridUi gridView={gridView} />\n        </DragDropContext>\n        </div>\n      </div>\n    );\n  }\n}\n\n// function viewPopup() {\n//   return(<ul>\n//     <li>Grid</li>\n//     <li>Collumn</li>\n//   </ul>)\n// }\n\nfunction mapStateToProps({ topics }) {\n  return { topics };\n}\n\nexport default connect(mapStateToProps)(LeanCanvasBoard);\n","import React, { Component } from \"react\";\nimport heroImage from \"../../assets/media/images/img.png\";\nimport { Button, Icon } from \"semantic-ui-react\";\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"hero\">\n          <div className=\"hero_text\">\n            <p>CAPTURE YOUR BUSINESS MODEL ON A LEAN CANVAS</p>\n            <h1>\n              Communicate your idea clearly and concisely to others so they can\n              get behind it.\n            </h1>{\" \"}\n            <h3>\n              {\" \"}\n              Lean Canvas helps you deconstruct your idea into a business model\n              using 9 building blocks.\n            </h3>\n            <Button animated>\n              <Button.Content visible>GET STARTED</Button.Content>\n              <Button.Content hidden>\n                <Icon name=\"arrow right\" />\n              </Button.Content>\n            </Button>\n          </div>\n          <div className=\"hero_image\">\n            <img src={heroImage} alt=\"\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport LeanCanvasBoard from \"./LeanCanvas/LeanCanvasBoard\";\nimport { connect } from \"react-redux\";\nimport uuid from \"react-uuid\";\nimport { addTopics } from \"../store/action\";\nimport Home from \"./HomePage/Home\";\n\nclass App extends Component {\n  componentDidMount() {\n    let topics = [\n      \"Problem\",\n      \"Existing alternative\",\n      \"Solution\",\n      \"Key Metrics\",\n      \"Unique value proposition\",\n      \"High-Level concept\",\n      \"Unfair advantage\",\n      \"Channels\",\n      \"Customer segment\",\n      \"Early addopters\",\n      \"Cost structure\",\n      \"Revenue streams\",\n    ];\n    let payload = topics.map((topic) => {\n      return {\n        topicId: uuid(),\n        topicName: topic,\n        points: [],\n      };\n    });\n\n    return addTopics(payload, this.props.dispatch);\n  }\n  render() {\n    return (\n      <>\n        <Home />\n        <LeanCanvasBoard />\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { state };\n}\n\nexport default connect(mapStateToProps)(App);\n","import ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\nimport App from \"./views/App\";\nimport 'semantic-ui-css/semantic.min.css'\nimport \"./assets/stylesheets/index.scss\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}