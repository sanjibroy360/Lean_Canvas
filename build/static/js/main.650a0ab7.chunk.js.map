{"version":3,"sources":["store/index.js","store/action/types.js","store/action/index.js","views/components/AddPoints.jsx","views/components/SinglePoint.jsx","views/components/AllPoints.jsx","views/components/SingleTopic.jsx","views/components/LeanCanvasBoard.jsx","views/App.jsx","index.js"],"names":["initialState","projectName","date","topics","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","state","action","type","payload","map","topic","topicId","points","point","pointId","filter","reorderPoints","dispatch","AddPoints","props","handleInput","event","target","style","height","scrollHeight","name","value","setState","handlePreview","checked","handleSubmit","trim","uuid","preview","closeInputBox","addPoint","this","className","source","escapeHtml","onChange","rows","onClick","Component","connect","SinglePoint","editPoint","enableEditMode","handleEditMode","console","log","handleDelete","deletePoint","pointInfo","AllPoints","listItem","index","key","id","draggableId","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","SingleTopic","handleInputTaking","isAddingPoints","topicName","droppableId","droppableProps","LeanCanvasBoard","reorder","list","sourceIndex","destIndex","card","splice","onDragEnd","response","destination","collumnNo","Fragment","App","addTopics","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.650a0ab7.chunk.js","sourcesContent":["import { createStore, compose } from \"redux\";\n\nimport {\n  ADD_TOPICS,\n  ADD_POINT,\n  EDIT_POINT,\n  REORDER_POINTS,\n  DELETE_POINT,\n} from \"./action/types\";\n\nlet initialState = {\n  projectName: \"\",\n  date: \"\",\n  topics: [],\n};\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_TOPICS:\n      return { ...state, topics: [...action.payload] };\n\n    case ADD_POINT:\n      state.topics = state.topics.map((topic) => {\n        if (topic.topicId === action.payload.topicId) {\n          return { ...topic, points: [...topic.points, action.payload] };\n        }\n        return topic;\n      });\n      return { ...state };\n\n    case EDIT_POINT:\n      state.topics = state.topics.map((topic) => {\n        if (topic.topicId === action.payload.topicId) {\n          topic.points = topic.points.map((point) => {\n            if (point.pointId === action.payload.pointId) {\n              return action.payload;\n            }\n            return point;\n          });\n        }\n        return topic;\n      });\n      return { ...state };\n\n    case REORDER_POINTS:\n      state.topics = state.topics.map((topic) => {\n        if (topic.topicId === action.payload.topicId) {\n          topic.points = action.payload.points;\n        }\n        return topic;\n      });\n      return { ...state };\n\n    case DELETE_POINT:\n      state.topics = state.topics.map((topic) => {\n        if (topic.topicId === action.payload.topicId) {\n          topic.points = topic.points.filter(\n            (point) => point.pointId !== action.payload.pointId\n          );\n        }\n        return topic;\n      });\n      return { ...state };\n\n    default:\n      return state;\n  }\n}\n\nconst composeEnhancers =\n  (typeof window !== \"undefined\" &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nexport const store = createStore(reducer, composeEnhancers());\n","export const ADD_TOPICS = \"ADD_TOPICS\";\nexport const ADD_POINT = \"ADD_POINT\";\nexport const EDIT_POINT = \"EDIT_POINT\";\nexport const REORDER_POINTS = \"REORDER_POINTS\";\nexport const DELETE_POINT = \"DELETE_POINT\";\n","import {\n  ADD_TOPICS,\n  ADD_POINT,\n  EDIT_POINT,\n  REORDER_POINTS,\n  DELETE_POINT,\n} from \"./types\";\n\nexport function addTopics(payload, dispatch) {\n  return dispatch({\n    type: ADD_TOPICS,\n    payload,\n  });\n}\n\nexport function addPoint(payload, dispatch) {\n  return dispatch({\n    type: ADD_POINT,\n    payload,\n  });\n}\n\nexport function editPoint(payload, dispatch) {\n  return dispatch({\n    type: EDIT_POINT,\n    payload,\n  });\n}\n\nexport function reorderPoints(payload, dispatch) {\n  return dispatch({\n    type: REORDER_POINTS,\n    payload,\n  });\n}\n\nexport function deletePoint(payload, dispatch) {\n  return dispatch({\n    type: DELETE_POINT,\n    payload,\n  });\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addPoint } from \"../../store/action\";\nimport ReactMarkdown from \"react-markdown\";\nimport uuid from \"react-uuid\";\n\nclass AddPoints extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      point: \"\",\n      preview: false,\n    };\n  }\n\n  handleInput = (event) => {\n    event.target.style.height = \"inherit\";\n    event.target.style.height = `${event.target.scrollHeight}px`;\n    let {\n      target: { name, value },\n    } = event;\n    return this.setState({ [name]: value });\n  };\n\n  handlePreview = ({ target: { name, checked } }) => {\n    return this.setState({ [name]: checked });\n  };\n\n  handleSubmit = (event) => {\n    let { point } = this.state;\n    point = point.trim();\n    let payload = {\n      pointId: uuid(),\n      point,\n      topicId: this.props.topic.topicId,\n    };\n    if (point) {\n      this.setState({ point: \"\", preview: false });\n      this.props.closeInputBox();\n      return addPoint(payload, this.props.dispatch);\n    }\n  };\n\n  closeInputBox = () => {\n    this.setState({ point: \"\", preview: false });\n    return this.props.closeInputBox();\n  };\n  render() {\n    let { point, preview } = this.state;\n    let { topic } = this.props;\n    return (\n      <div className=\"add_points_form\">\n        {preview ? (\n          <div className=\"text_wrapper\">\n            <ReactMarkdown source={point} escapeHtml={false} />\n            <input\n              type=\"checkbox\"\n              name=\"preview\"\n              checked={preview}\n              onChange={this.handlePreview}\n            />\n            <span className=\"small_text\">Preview text</span>\n          </div>\n        ) : (\n          <div className=\"input_point\">\n            <textarea\n              name=\"point\"\n              rows=\"2\"\n              onChange={this.handleInput}\n              value={point}\n            ></textarea>\n            {point.trim() && (\n              <>\n                <input\n                  type=\"checkbox\"\n                  name=\"preview\"\n                  checked={preview}\n                  onChange={this.handlePreview}\n                />\n                <span className=\"small_text\">Preview text</span>\n              </>\n            )}\n          </div>\n        )}\n\n        <div className=\"btn_wrapper\">\n          <button\n            type=\"submit\"\n            onClick={(event) => this.handleSubmit(event, topic)}\n            className=\"btn save_btn\"\n          >\n            Add\n          </button>\n\n          <button onClick={this.closeInputBox} className=\"btn cancel_btn\">\n            <i className=\"fas fa-times\"></i>\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect()(AddPoints);\n","import React, { Component } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\n\nimport { editPoint, deletePoint } from \"../../store/action\";\nimport { connect } from \"react-redux\";\n\nclass SinglePoint extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editPoint: \"\",\n      preview: \"\",\n      enableEditMode: false,\n    };\n  }\n  handleInput = (event) => {\n    event.target.style.height = \"inherit\";\n    event.target.style.height = `${event.target.scrollHeight}px`;\n    let {\n      target: { name, value },\n    } = event;\n    return this.setState({ [name]: value });\n  };\n\n  handlePreview = ({ target: { name, checked } }) => {\n    return this.setState({ [name]: checked });\n  };\n\n  handleSubmit = (event, payload) => {\n    payload = { ...payload, point: this.state.editPoint };\n    this.setState({ editPoint: \"\", enableEditMode: false });\n    return editPoint(payload, this.props.dispatch);\n  };\n\n  handleEditMode = (event, payload) => {\n    let { point } = payload;\n    console.log(payload);\n    this.setState({ editPoint: point, enableEditMode: true });\n  };\n\n  handleDelete = (event, payload) => {\n    return deletePoint(payload, this.props.dispatch);\n  };\n\n  closeInputBox = () => {\n    return this.setState({ editPoint: \"\", enableEditMode: false });\n  };\n\n  render() {\n    let { enableEditMode, editPoint, preview } = this.state;\n    let { pointInfo } = this.props;\n    return (\n      <div>\n        {enableEditMode ? (\n          <>\n            {preview ? (\n              <div className=\"text_wrapper\">\n                <ReactMarkdown source={editPoint} escapeHtml={false} />\n                <input\n                  type=\"checkbox\"\n                  name=\"preview\"\n                  checked={preview}\n                  onChange={this.handlePreview}\n                />\n                <span className=\"small_text\">Preview text</span>\n              </div>\n            ) : (\n              <>\n                <div className=\"input_point\">\n                  <textarea\n                    name=\"editPoint\"\n                    value={editPoint}\n                    rows=\"4\"\n                    onChange={this.handleInput}\n                  ></textarea>\n                  {pointInfo.point.trim() && (\n                    <>\n                      <input\n                        type=\"checkbox\"\n                        name=\"preview\"\n                        checked={preview}\n                        onClick={this.handlePreview}\n                      />\n                      <span className=\"small_text\">Preview text</span>\n                    </>\n                  )}\n                </div>\n                <div className=\"btn_wrapper\">\n                  <button\n                    type=\"submit\"\n                    onClick={(event) => this.handleSubmit(event, pointInfo)}\n                    className=\"btn save_btn\"\n                  >\n                    Add\n                  </button>\n\n                  <button\n                    type=\"submit\"\n                    onClick={this.closeInputBox}\n                    className=\"btn cancel_btn\"\n                  >\n                    <i className=\"fas fa-times\"></i>\n                  </button>\n                </div>\n              </>\n            )}\n          </>\n        ) : (\n          <div className=\"card\">\n            <div className=\"content\">\n              <div className=\"text\">\n                <ReactMarkdown escapeHtml={false}>\n                  {pointInfo.point}\n                </ReactMarkdown>\n              </div>\n              <div>\n                <nobr>\n                  <button\n                    onClick={(event) => this.handleEditMode(event, pointInfo)}\n                  >\n                    <i className=\"far fa-edit edit_point\"></i>\n                  </button>\n                  <button\n                    onClick={(event) => this.handleDelete(event, pointInfo)}\n                  >\n                    <i className=\"fas fa-trash-alt delete_point\"></i>\n                  </button>\n                </nobr>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { state };\n}\n\nexport default connect(mapStateToProps)(SinglePoint);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport SinglePoint from \"./SinglePoint\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\n\nclass AllPoints extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editPoint: \"\",\n      preview: \"\",\n      enableEditMode: false,\n    };\n  }\n\n  render() {\n    let { topic} = this.props;\n    \n    return (\n      <>\n        {topic.points.map((listItem, index) => {\n          return (\n            <Draggable\n              key={listItem.id}\n              draggableId={listItem.pointId}\n              index={index}\n            >\n              {(provided, snapshot) => (\n                <div\n                  ref={provided.innerRef}\n                  {...provided.draggableProps}\n                  {...provided.dragHandleProps}\n                >\n                  <SinglePoint pointInfo={listItem} />\n                </div>\n              )}\n            </Draggable>\n          );\n        })}\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { state };\n}\n\nexport default connect(mapStateToProps)(AllPoints);\n","import React, { Component } from \"react\";\nimport AddPoints from \"./AddPoints\";\nimport AllPoints from \"./AllPoints\";\nimport { Droppable } from \"react-beautiful-dnd\";\n\nclass SingleTopic extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAddingPoints: false,\n    };\n  }\n\n  handleInputTaking = () => {\n    let { isAddingPoints } = this.state;\n    return this.setState({ isAddingPoints: !isAddingPoints });\n  };\n\n  render() {\n    let { topic } = this.props;\n    let {topicName, topicId} = topic;\n    let { isAddingPoints } = this.state;\n    return (\n      <Droppable droppableId={topic.topicId}>\n        {(provided, snapshot) => (\n          <div\n            {...provided.droppableProps}\n            ref={provided.innerRef}\n            className=\"topic\"\n            key={topicName+topicId}\n          >\n            <p className=\"title\" key={topicId + 1}>\n              {topicName}\n            </p>\n            <AllPoints topic={topic} />\n            {isAddingPoints ? (\n              <AddPoints topic={topic} closeInputBox={this.handleInputTaking} />\n            ) : (\n              <button onClick={this.handleInputTaking}>\n                <i className=\"fa fa-plus-circle\"></i> Add card\n              </button>\n            )}\n          </div>\n        )}\n      </Droppable>\n    );\n  }\n}\n\nexport default SingleTopic;\n","import React, { Component } from \"react\";\nimport SingleTopic from \"./SingleTopic\";\nimport { connect } from \"react-redux\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { reorderPoints } from \"../../store/action\";\n\nclass LeanCanvasBoard extends Component {\n  reorder = (list, sourceIndex, destIndex) => {\n    let card = list.points.splice(sourceIndex, 1)[0];\n    list.points.splice(destIndex, 0, card);\n    return reorderPoints(list, this.props.dispatch);\n  };\n  onDragEnd = (response) => {\n    let { topics } = this.props;\n    let { droppableId } = response.source;\n    let sourceIndex = response.source.index;\n    let destIndex = response.destination.index;\n    let list = topics.filter((topic) => topic.topicId === droppableId)[0];\n    console.log(response);\n    return this.reorder(list, sourceIndex, destIndex);\n  };\n  render() {\n    let { topics } = this.props;\n\n    return (\n      <div className=\"container\">\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          <ul className=\"grid_container\" key=\"wrapper\">\n            {topics.map((topic, collumnNo) => {\n              return (\n                <React.Fragment key={topic.topicId+collumnNo}>\n                  {!(collumnNo % 2) ? (\n                    <li className=\"inner_wrapper\" key={`${collumnNo}`}>\n                      <SingleTopic\n                        topic={topics[collumnNo]}\n                        key={`${topic.topicId}card`}\n                      />\n                      <SingleTopic\n                        topic={topics[collumnNo + 1]}\n                        key={`${topic.topicId + 1}card`}\n                      />\n                    </li>\n                  ) : (\n                    <></>\n                  )}\n                </React.Fragment>\n              );\n            })}\n          </ul>\n        </DragDropContext>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ topics }) {\n  return { topics };\n}\n\nexport default connect(mapStateToProps)(LeanCanvasBoard);\n","import React, { Component } from \"react\";\nimport LeanCanvasBoard from \"./components/LeanCanvasBoard\";\nimport {connect} from \"react-redux\";\nimport uuid from \"react-uuid\";\nimport {addTopics} from \"../store/action\";\n\nclass App extends Component {\n  componentDidMount() {\n    \n    let topics = [\n      \"Problem\",\n      \"Existing alternative\",\n      \"Solution\",\n      \"Key Metrics\",\n      \"Unique value proposition\",\n      \"High-Level concept\",\n      \"Unfair advantage\",\n      \"Channels\",\n      \"Customer segment\",\n      \"Early addopters\",\n      \"Cost structure\",\n      \"Revenue streams\",\n    ];\n    let payload = topics.map((topic) => {\n      return {\n        topicId: uuid(),\n        topicName: topic,\n        points: [],\n      };\n    });\n    \n    return addTopics(payload, this.props.dispatch);\n  }\n  render() {\n    return (\n      <>\n        <LeanCanvasBoard />\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n    return {state};\n}\n\nexport default connect(mapStateToProps)(App);\n","import ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\nimport App from \"./views/App\";\nimport 'semantic-ui-css/semantic.min.css'\nimport \"./assets/stylesheets/index.scss\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}